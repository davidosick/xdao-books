# Основная конфигурация nginx для MkDocs сайта
events {
    worker_connections 1024;
}

http {
    # MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    server {
        listen 80;
        server_name _;  # Замените на ваш домен, например: xdao-docs.example.com

        # Корневая директория с собранным MkDocs сайтом
        root /var/www/xdao-books/site;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Основная локация для HTML файлов
        location / {
            try_files $uri $uri/ $uri.html /index.html;
            
            # Кэширование HTML файлов
            expires 1h;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

        # Кэширование статических ресурсов (CSS, JS, изображения)
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Обработка sitemap
        location = /sitemap.xml {
            expires 1d;
            add_header Cache-Control "public";
        }

        # Обработка 404 ошибок
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # Обработка других ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Запрет доступа к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Запрет доступа к исходным файлам MkDocs
        location ~* \.(md|yml|yaml)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # HTTPS редирект (раскомментируйте, если используете HTTPS)
    # server {
    #     listen 80;
    #     server_name xdao-docs.example.com;  # Замените на ваш домен
    #     return 301 https://$server_name$request_uri;
    # }

    # HTTPS конфигурация (раскомментируйте и настройте SSL сертификаты)
    # server {
    #     listen 443 ssl http2;
    #     server_name xdao-docs.example.com;  # Замените на ваш домен
    #
    #     # SSL сертификаты
    #     ssl_certificate /etc/ssl/certs/your-cert.pem;
    #     ssl_certificate_key /etc/ssl/private/your-key.pem;
    #
    #     # SSL настройки
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #     # Остальная конфигурация такая же, как в HTTP блоке выше
    #     root /var/www/xdao-books/site;
    #     index index.html;
    #
    #     # ... (скопировать все location блоки из HTTP конфигурации)
    # }
}
